{"version":3,"file":"main.js","mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAQF,SAASG,iBAAiB,UAClCC,EAAUJ,SAASK,cAAc,YACjCC,EAAeN,SAASK,cAAc,WACtCE,EAAgBP,SAASK,cAAc,cAOvCG,EAAa,WACjBN,EAAMO,UAAUC,IAAI,UACpBN,EAAQK,UAAUC,IAAI,SACxB,EAEAJ,EAAaL,iBAAiB,SAVZ,WAChBC,EAAMO,UAAUE,OAAO,UACvBP,EAAQK,UAAUE,OAAO,SAC3B,IAQAJ,EAAcN,iBAAiB,QAASO,GACxCJ,EAAQH,iBAAiB,QAASO,GAClC,MAGMI,EAAMC,GAAGC,OAAO,QACnBC,OAAO,OACPC,KAAK,QALM,KAMXA,KAAK,SALO,KAOTC,EAAaJ,GAAGK,cAAcC,MAAM,KAAKC,UAAU,CAACC,IAP3C,IAO+D,MACxEC,EAAOT,GAAGU,UAAUN,WAAWA,GAkDrC,SAASO,EAAyBC,GAChC,IAAKA,EACH,MAAO,GAGT,IAAIC,EAAUD,EAAOpB,cAAc,SAEnC,IAAKqB,EACH,MAAO,GAGT,IAAIC,EAAsBD,EAAQE,UAC9BC,EAAcF,EAAoBG,QAAQ,MAAQ,EAGtD,OAFmBH,EAAoBI,MAAMF,EAG/C,CAhEgBjB,EAAIG,OAAO,KAiBzBF,GAAGmB,KAAK,kEAAkEC,MAAKC,IAC7E,MAAMC,EAAYC,SAASC,QAAQH,EAAMA,EAAKI,QAAQH,WAEtDvB,EAAI2B,UAAU,QACXL,KAAKC,EAAUK,UACfC,QACA1B,OAAO,QACPC,KAAK,QAAS,WACdA,KAAK,IAAKM,GACVN,KAAK,oBAAqB0B,GAAMA,EAAEC,WAAWC,OAC7C7B,OAAO,SACP8B,MAAKH,GAAM,IAAGA,EAAEC,WAAWC,SAE9BhC,EAAIkC,GAAG,aAAcJ,IACnBK,QAAQC,IAAI,kBAAmBN,EAAEjB,QAAQwB,SACnBzB,EAAyBkB,EAAEjB,QAAQwB,SAErDC,cAAcC,oBAChBnD,SAASoD,uBAAuB,WAAWxB,UAAYuB,iBACzD,IAGFvC,EAAIkC,GAAG,SAAUJ,IACf,IAAIS,EAAmB3B,EAAyBkB,EAAEjB,QAC9CyB,cAAcC,KAChBnD,SAASqD,eAAe,kBAAkBzB,UAAYuB,EAAmB,KAAOD,cAAcC,GAAkBG,KAClH,GACA,IAsBUC,OAAOC,KAAKC,cAClBC,SAAQ,SAAUC,GAC1B,IAAIC,EAAS5D,SAAS6D,cAAc,UAEpCD,EAAOE,MAAQH,EACfC,EAAOhC,UAAY+B,EACnBI,SAASC,YAAYJ,EACvB,IAEAG,SAASE,SAAW,WAClB,IAAId,EAAmBe,KAAKJ,MAC5B9D,SAASqD,eAAe,kBAAkBzB,UAAYuB,EAAmB,KAAOgB,cAAchB,GAAkBG,IAChH,CAAC","sources":["webpack://pop_eats_latest/./src/index.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n  const modal = document.querySelectorAll(\".modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openModalBtn = document.querySelector(\".button\");\n  const closeModalBtn = document.querySelector(\".btn-close\");\n\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n  };\n\n  openModalBtn.addEventListener(\"click\", openModal); \n  closeModalBtn.addEventListener(\"click\", closeModal);\n  overlay.addEventListener(\"click\", closeModal);\n  const width = 900;\n  const height = 900;\n\n  const svg = d3.select('body')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height);\n\n  const projection = d3.geoMercator().scale(140).translate([width / 2, height / 1.4]);\n  const path = d3.geoPath().projection(projection);\n\n  const tooltip = svg.append('g');\n\n//   const loadJSONData = async (url) => {\n//     try {\n//       const response = await fetch(url);\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch data');\n//       }\n//       const data = await response.json();\n//       return data;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n\n\n    d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json').then(data => {\n      const countries = topojson.feature(data, data.objects.countries);\n\n      svg.selectAll('path')\n        .data(countries.features)\n        .enter()\n        .append('path')\n        .attr('class', 'country')\n        .attr('d', path)\n        .attr('data-countryname', (d) => d.properties.name)\n        .append('title')\n        .text(d => ` ${d.properties.name}`);\n\n      svg.on('mouseover', (d) => {\n        console.log('MOUSEOVER EVENT', d.target?.dataset);\n        let hovered_country = getCountryNameFromTarget(d.target?.dataset);\n\n        if (nationalFoods[selected_country]) {\n          document.getElementsByClassName(\"country\").innerHTML = selected_country;\n        }\n      });\n\n      svg.on(\"click\", (d) => {\n        let selected_country = getCountryNameFromTarget(d.target);\n        if (nationalFoods[selected_country]) {\n          document.getElementById(\"food_displayer\").innerHTML = selected_country + \": \" + nationalFoods[selected_country].dish;\n        }\n      });\n    });\n  \n\n  function getCountryNameFromTarget(target) {\n    if (!target) {\n      return \"\";\n    }\n\n    let element = target.querySelector(\"title\");\n\n    if (!element) {\n      return \"\";\n    }\n\n    let country_id_and_name = element.innerHTML;\n    let split_index = country_id_and_name.indexOf(': ') + 2;\n    let country_name = country_id_and_name.slice(split_index);\n\n    return country_name;\n  }\n\n  let countryjs = Object.keys(countryFoods);\n  countryjs.forEach(function (selectedItem) {\n    let option = document.createElement('option');\n\n    option.value = selectedItem;\n    option.innerHTML = selectedItem;\n    selector.appendChild(option);\n  });\n\n  selector.onchange = function () {\n    let selected_country = this.value;\n    document.getElementById(\"food_displayer\").innerHTML = selected_country + \": \" + country_foods[selected_country].dish\n    }\n\n\n\n\n})\n\n"],"names":["document","addEventListener","modal","querySelectorAll","overlay","querySelector","openModalBtn","closeModalBtn","closeModal","classList","add","remove","svg","d3","select","append","attr","projection","geoMercator","scale","translate","width","path","geoPath","getCountryNameFromTarget","target","element","country_id_and_name","innerHTML","split_index","indexOf","slice","json","then","data","countries","topojson","feature","objects","selectAll","features","enter","d","properties","name","text","on","console","log","dataset","nationalFoods","selected_country","getElementsByClassName","getElementById","dish","Object","keys","countryFoods","forEach","selectedItem","option","createElement","value","selector","appendChild","onchange","this","country_foods"],"sourceRoot":""}
{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pop_eats_latest/./data/foods.js","webpack://pop_eats_latest/./node_modules/country-flags-svg/dist/data/countries.js","webpack://pop_eats_latest/./node_modules/country-flags-svg/dist/data/flagUrlByIso3.js","webpack://pop_eats_latest/./node_modules/country-flags-svg/dist/index.js","webpack://pop_eats_latest/./node_modules/country-flags-svg/dist/lib/api.js","webpack://pop_eats_latest/webpack/bootstrap","webpack://pop_eats_latest/webpack/runtime/make namespace object","webpack://pop_eats_latest/./src/index.js"],"sourcesContent":["const country_foods = {\n    \"Afghanistan\": {\n        \"dish\": \"Kabuli Palaw\"\n    },\n    \"Albania\": {\n        \"dish\": \"Tavë kosi\"\n    },\n    \"Algeria\": {\n        \"dish\": \"Couscous \"\n    },\n    \"Angola\": {\n        \"dish\": \"Moamba de galinha \"\n    },\n    \"Antarctica\": {\n        \"dish\": \"Pemmican\"\n    },\n    \"Antigua and Barbuda\": {\n        \"dish\": \"Pepperpot, Fungee\"\n    },\n    \"Argentina\": {\n        \"dish\": \"Asado\"\n    },\n    \"Armenia\": {\n        \"dish\": \"Harissa, Dolma, Khorovats\"\n    },\n    \"Aruba\": {\n        \"dish\": \"Keshi yena\"\n    },\n    \"Australia\": {\n        \"dish\": \"Meat pie,Roast lamb \"\n    },\n    \"Austria\": {\n        \"dish\": \"Wiener schnitzel, Tafelspitz\"\n    },\n    \"Azerbaijan\": {\n        \"dish\": \"Dolma\"\n    },\n    \"Bahamas\": {\n        \"dish\": \"Crack conch with peas and rice \"\n    },\n    \"Bahrain\": {\n        \"dish\": \"Machboos\"\n    },\n    \"Bangladesh\": {\n        \"dish\": \"Rice, Fish, Chicken Korma\"\n    },\n    \"Barbados\": {\n        \"dish\": \"Cou-Cou and Flying Fish \"\n    },\n    \"Belarus\": {\n        \"dish\": \"Draniki\"\n    },\n    \"Belgium\": {\n        \"dish\": \"Moules-frites\"\n    },\n    \"Belize\": {\n        \"dish\": \"Boil up\"\n    },\n    \"Bermuda\": {\n        \"dish\": \"Bermuda fish chowder\"\n    },\n    \"Bhutan\": {\n        \"dish\": \"Ema datshi\"\n    },\n    \"Bolivia\": {\n        \"dish\": \"Salteñas\"\n    },\n    \"Bosnia and Herzegovina\": {\n        \"dish\": \"Bosnian pot\"\n    },\n    \"Botswana\": {\n        \"dish\": \"Seswaa\"\n    },\n    \"Brazil\": {\n        \"dish\": \"Feijoada\"\n    },\n    \"Brunei\": {\n        \"dish\": \"Ambuyat\"\n    },\n    \"Bulgaria\": {\n        \"dish\": \"Banitsa, Bob chorba\"\n    },\n    \"Burma\": {\n        \"dish\": \"Mohinga\"\n    },\n    \"Cambodia\": {\n        \"dish\": \"Amok trey\"\n    },\n    \"Cameroon\": {\n        \"dish\": \"Ndolé\"\n    },\n    \"Canada\": {\n        \"dish\": \"Poutine\"\n    },\n    \"Cape Verde\": {\n        \"dish\": \"Cachupa\"\n    },\n    \"Chile\": {\n        \"dish\": \"Empanada\"\n    },\n    \"China\": {\n        \"dish\": \"Peking Duck\"\n    },\n    \"Hong Kong\": {\n        \"dish\": \"Char siu\"\n    },\n    \"Macau\": {\n        \"dish\": \"Minchee \"\n    },\n    \"Colombia\": {\n        \"dish\": \"Ajiaco, Bandeja paisa\"\n    },\n    \"Costa Rica\": {\n        \"dish\": \"Gallo pinto\"\n    },\n    \"Ivory Coast\": {\n        \"dish\": \"Fufu, Kedjenou\"\n    },\n    \"Croatia\": {\n        \"dish\": \"Istrian stew\"\n    },\n    \"Cuba\": {\n        \"dish\": \"Ropa vieja, Moros y cristianos\"\n    },\n    \"Cyprus\": {\n        \"dish\": \"Fasolada\"\n    },\n    \"Czech Republic\": {\n        \"dish\": \"roast pork with dumplings and sauerkraut\"\n    },\n    \"Democratic Republic of the Congo\": {\n        \"dish\": \"Poulet à la Moambé\"\n    },\n    \"Denmark\": {\n        \"dish\": \"fried pork and potato-based dish\"\n    },\n    \"Greenland\": {\n        \"dish\": \"Kiviak\"\n    },\n    \"Dominica\": {\n        \"dish\": \"Mountain chicken, Fish broth\"\n    },\n    \"Dominican Republic\": {\n        \"dish\": \"rice, red beans, and meat\"\n    },\n    \"Ecuador\": {\n        \"dish\": \"Encebollado, Fritada,Guatitas,\"\n    },\n    \"Egypt\": {\n        \"dish\": \"Ful medames, kushari,\"\n    },\n    \"El Salvador\": {\n        \"dish\": \"Pupusa\"\n    },\n    \"Eritrea\": {\n        \"dish\": \"Zigini with injera, Gored gored, raw meat\"\n    },\n    \"Estonia\": {\n        \"dish\": \"sauerkraut stew\"\n    },\n    \"Ethiopia\": {\n        \"dish\": \"Wat with injera, Fit-fit\"\n    },\n    \"Finland\": {\n        \"dish\": \"Karjalanpaisti,Mämmi, Sautéed reindeer\"\n    },\n    \"France\": {\n        \"dish\": \"Crêpe, Pot-au-feu,Macaron, Bisque\"\n    },\n    \"Gabon\": {\n        \"dish\": \"Poulet Nyembwe\"\n    },\n    \"Georgia\": {\n        \"dish\": \"Khachapuri, khinkali\"\n    },\n    \"Germany\": {\n        \"dish\": \"Currywurst, Sauerbraten, Bratwurst\"\n    },\n    \"Ghana\": {\n        \"dish\": \"Fufu\"\n    },\n    \"Greece\": {\n        \"dish\": \"Fasolada,Moussaka, Souvlaki\"\n    },\n    \"Grenada\": {\n        \"dish\": \"Oil Down\"\n    },\n    \"Guatemala\": {\n        \"dish\": \"Fiambre, Pepian (hearty meat stew)\"\n    },\n    \"Guyana\": {\n        \"dish\": \"Pepperpot\"\n    },\n    \"Haiti\": {\n        \"dish\": \"Red beans and rice \"\n    },\n    \"Honduras\": {\n        \"dish\": \"Baleada, Carne asada, Sopa de Caracol (Conch Soup)\"\n    },\n    \"Hungary\": {\n        \"dish\": \"Gulyás,\"\n    },\n    \"Iceland\": {\n        \"dish\": \"Hákarl, Þorramatur\"\n    },\n    \"India\": {\n        \"dish\": \"No officially anointed national dish\"\n    },\n    \"Indonesia\": {\n        \"dish\": \"Tumpeng Sate,Soto,Nasi goreng\"\n    },\n    \"Iran\": {\n        \"dish\": \"Chelo kabab, Ghormeh sabzi\"\n    },\n    \"Iraq\": {\n        \"dish\": \"Samak masgouf,Kleicha\"\n    },\n    \"Ireland\": {\n        \"dish\": \"Colcannon,Irish stew \"\n    },\n    \"Israel\": {\n        \"dish\": \"Hummus, falafel, Meorav Yerushalmi\"\n    },\n    \"Italy\": {\n        \"dish\": \"Pasta,Polenta,Pizza, Risotto\"\n    },\n    \"Jamaica\": {\n        \"dish\": \"Ackee and Saltfish, Jamaican patty\"\n    },\n    \"Japan\": {\n        \"dish\": \"Sushi, Japanese curry,Ramen \"\n    },\n    \"Jordan\": {\n        \"dish\": \"Mansaf\"\n    },\n    \"Kazakhstan\": {\n        \"dish\": \"Beshbarmak, Shalgam\"\n    },\n    \"Kenya\": {\n        \"dish\": \"Ugali, Sukuma wiki, Nyama choma\"\n    },\n    \"Kuwait\": {\n        \"dish\": \"Machboos\"\n    },\n    \"Kyrgyzstan\": {\n        \"dish\": \"Beshbarmak, Laghman, Kuurdak\"\n    },\n    \"Laos\": {\n        \"dish\": \"Tum Mak Hoong (Som Tum, its Thai name)\"\n    },\n    \"Latvia\": {\n        \"dish\": \"Latke\"\n    },\n    \"Lebanon\": {\n        \"dish\": \"Kibbeh\"\n    },\n    \"Libya\": {\n        \"dish\": \"Bazeen, Usban\"\n    },\n    \"Lithuania\": {\n        \"dish\": \"Cepelinai\"\n    },\n    \"Luxembourg\": {\n        \"dish\": \"Judd mat Gaardebounen, Bouneschlupp\"\n    },\n    \"Macedonia\": {\n        \"dish\": \"Tavče Gravče\"\n    },\n    \"Madagascar\": {\n        \"dish\": \"Romazava \"\n    },\n    \"Malaysia\": {\n        \"dish\": \"Nasi lemak,Satay, Laksa, Roti canai\"\n    },\n    \"Malta\": {\n        \"dish\": \"Pastizzi, Rabbit Stew (Fenkata)\"\n    },\n    \"Mauritania\": {\n        \"dish\": \"Thieboudienne, Couscous\"\n    },\n    \"Mexico\": {\n        \"dish\": \"Tacos, Mole poblano,Chiles en nogada\"\n    },\n    \"Moldova\": {\n        \"dish\": \"Mămăligă, Sarmale, Răcituri\"\n    },\n    \"Mongolia\": {\n        \"dish\": \"Buuz\"\n    },\n    \"Montenegro\": {\n        \"dish\": \"Kačamak, Raštan\"\n    },\n    \"Morocco\": {\n        \"dish\": \"Couscous, Tagine\"\n    },\n    \"Nicaragua\": {\n        \"dish\": \"Gallo pinto \"\n    },\n    \"Nigeria\": {\n        \"dish\": \"Jollof rice\"\n    },\n    \"Nepal\": {\n        \"dish\": \"Dal bhat \"\n    },\n    \"Netherlands\": {\n        \"dish\": \"Stamppot, hutspot\"\n    },\n    \"New Zealand\": {\n        \"dish\": \"Bacon and egg pie, lamb, pavlova\"\n    },\n    \"North Korea\": {\n        \"dish\": \"Galbi, Kimchi\"\n    },\n    \"Norway\": {\n        \"dish\": \"Fårikål\"\n    },\n    \"Pakistan\": {\n        \"dish\": \"Biryani, Nihari\"\n    },\n    \"Panama\": {\n        \"dish\": \"Sancocho de gallina\"\n    },\n    \"Palestine\": {\n        \"dish\": \"Arab salad, Falafel, Mujaddara, Musakhan, Hummus with tahini\"\n    },\n    \"Paraguay\": {\n        \"dish\": \"Sopa paraguaya\"\n    },\n    \"Peru\": {\n        \"dish\": \"Ceviche\"\n    },\n    \"Philippines\": {\n        \"dish\": \"Adobo,Lechon (both unofficial)\"\n    },\n    \"Poland\": {\n        \"dish\": \"Bigos, Pierogi,Kotlet schabowy, Żurek\"\n    },\n    \"Portugal\": {\n        \"dish\": \"Bacalhau\"\n    },\n    \"Puerto Rico\": {\n        \"dish\": \"Arroz con gandules, Mofongo\"\n    },\n    \"Republic of the Congo\": {\n        \"dish\": \"Poulet Moambé \"\n    },\n    \"Romania\": {\n        \"dish\": \"Mămăligă, Sarmale, Mici\"\n    },\n    \"Russia\": {\n        \"dish\": \"Pelmeni, Shchi, Kasha,Pirogi, Pirozhki\"\n    },\n    \"Republic of Tatarstan\": {\n        \"dish\": \"Öçpoçmaq\"\n    },\n    \"Tula, Russia\": {\n        \"dish\": \"Tula gingerbread\"\n    },\n    \"San Marino\": {\n        \"dish\": \"Torta Tre Monti\"\n    },\n    \"Saudi Arabia\": {\n        \"dish\": \"Kabsa\"\n    },\n    \"Senegal\": {\n        \"dish\": \"Thieboudienne\"\n    },\n    \"Serbia\": {\n        \"dish\": \"Ćevapčići, Pljeskavica, Ražnjići, Proja, Kajmak\"\n    },\n    \"Slovakia\": {\n        \"dish\": \"Bryndzové halušky\"\n    },\n    \"Slovenia\": {\n        \"dish\": \"Ajdovi žganci, Belokranjska povitica, Obara\"\n    },\n    \"Singapore\": {\n        \"dish\": \"Chilli crab,Hainanese Chicken Rice\"\n    },\n    \"Somalia\": {\n        \"dish\": \"Canjeero with goat stew\"\n    },\n    \"South Africa\": {\n        \"dish\": \"Bobotie\"\n    },\n    \"South Korea\": {\n        \"dish\": \"Kimchi, bulgogi\"\n    },\n    \"Spain\": {\n        \"dish\": \"Tortilla española \"\n    },\n    \"Andalusia\": {\n        \"dish\": \"Gazpacho\"\n    },\n    \"Asturias\": {\n        \"dish\": \"Fabada asturiana\"\n    },\n    \"Basque Country\": {\n        \"dish\": \"Marmitako, Chistorras\"\n    },\n    \"Canary Islands\": {\n        \"dish\": \"Ropa vieja, Papas arrugadas\"\n    },\n    \"Galicia\": {\n        \"dish\": \"Empanada, Polbo á feira\"\n    },\n    \"Valencian Community\": {\n        \"dish\": \"Paella\"\n    },\n    \"Sri Lanka\": {\n        \"dish\": \"Rice and curry\"\n    },\n    \"Sudan\": {\n        \"dish\": \"Ful medames\"\n    },\n    \"Sweden\": {\n        \"dish\": \"Köttbullar, Kräftskiva,Surströmming,Ostkaka\"\n    },\n    \"Switzerland\": {\n        \"dish\": \"Cervelat,Fondue, Rösti\"\n    },\n    \"Syria\": {\n        \"dish\": \"Kibbeh\"\n    },\n    \"Tajikistan\": {\n        \"dish\": \"O'sh (pilaf)\"\n    },\n    \"Taiwan\": {\n        \"dish\": \"Beef noodle soup\"\n    },\n    \"Tanzania\": {\n        \"dish\": \"Ugali\"\n    },\n    \"Thailand\": {\n        \"dish\": \"Pad Thai, Tom Yum Goong\"\n    },\n    \"Trinidad and Tobago\": {\n        \"dish\": \"Callaloo,Doubles\"\n    },\n    \"Turkey\": {\n        \"dish\": \"Döner kebab, Kuru fasulye with pilav\"\n    },\n    \"Tunisia\": {\n        \"dish\": \"Couscous, Kabkabou\"\n    },\n    \"Turkmenistan\": {\n        \"dish\": \"Palaw\"\n    },\n    \"Uganda\": {\n        \"dish\": \"Matoke\"\n    },\n    \"Ukraine\": {\n        \"dish\": \"Borscht, Varenyky \"\n    },\n    \"United Kingdom\": {\n        \"dish\": \"Fish and chips,Chicken tikka masala (Indian-British curry)\"\n    },\n    \"England\": {\n        \"dish\": \"Beef,(especially roast beef/corned beef),Pudding \"\n    },\n    \"Cornwall\": {\n        \"dish\": \"Cornish pasty\"\n    },\n    \"Northern Ireland\": {\n        \"dish\": \"Ulster fry\"\n    },\n    \"Isle of Man\": {\n        \"dish\": \"Skeddan jiarg\"\n    },\n    \"Scotland\": {\n        \"dish\": \"Haggis\"\n    },\n    \"Wales\": {\n        \"dish\": \"Cawl\"\n    },\n    \"United States of America\": {\n        \"dish\": \"Hamburger, Hot dog, Fried chicken, Buffalo wings, Apple pie\"\n    },\n    \"United States Virgin Islands\": {\n        \"dish\": \"Fish and Fungi\"\n    },\n    \"Uruguay\": {\n        \"dish\": \"Asado, Chivito\"\n    },\n    \"Uzbekistan\": {\n        \"dish\": \"O'sh\"\n    },\n    \"Vanuatu\": {\n        \"dish\": \"Lap lap\"\n    },\n    \"Venezuela\": {\n        \"dish\": \"Pabellón criollo\"\n    },\n    \"Vietnam\": {\n        \"dish\": \"Phở, Bún bò Huế\"\n    },\n    \"Yemen\": {\n        \"dish\": \"Saltah\"\n    },\n    \"Zimbabwe\": {\n        \"dish\": \"Sadza\"\n    }\n}\n\nexport default country_foods;  \n","\"use strict\";\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar flagUrlByIso3 = require(\"./flagUrlByIso3\");\n\nvar CountryData = /*#__PURE__*/_createClass(function CountryData(name, demonym, iso2, iso3) {\n  var altSpellings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n  _classCallCheck(this, CountryData);\n\n  this.name = name;\n  this.demonym = demonym;\n  this.flag = flagUrlByIso3[iso3];\n  this.iso2 = iso2;\n  this.iso3 = iso3;\n  this.altSpellings = altSpellings;\n});\n\nmodule.exports = [new CountryData(\"Afghanistan\", \"Afghan\", \"AF\", \"AFG\"), new CountryData(\"Aland Islands\", \"Alandic\", \"AX\", \"ALA\"), new CountryData(\"Albania\", \"Albanian\", \"AL\", \"ALB\"), new CountryData(\"Algeria\", \"Algerian\", \"DZ\", \"DZA\"), new CountryData(\"American Samoa\", \"American Samoan\", \"AS\", \"ASM\"), new CountryData(\"Andorra\", \"Andorran\", \"AD\", \"AND\"), new CountryData(\"Angola\", \"Angolan\", \"AO\", \"AGO\"), new CountryData(\"Anguilla\", \"Anguillian\", \"AI\", \"AIA\"), new CountryData(\"Antigua and Barbuda\", \"Antiguan Barbudan\", \"AG\", \"ATG\"), new CountryData(\"Argentina\", \"Argentinian\", \"AR\", \"ARG\"), new CountryData(\"Armenia\", \"Armenian\", \"AM\", \"ARM\"), new CountryData(\"Aruba\", \"Arubian\", \"AW\", \"ABW\"), new CountryData(\"Australia\", \"Australian\", \"AU\", \"AUS\"), new CountryData(\"Austria\", \"Austrian\", \"AT\", \"AUT\"), new CountryData(\"Azerbaijan\", \"Azerbaijani\", \"AZ\", \"AZE\"), new CountryData(\"Bahamas\", \"Bahamian\", \"BS\", \"BHS\"), new CountryData(\"Bahrain\", \"Bahraini\", \"BH\", \"BHR\"), new CountryData(\"Bangladesh\", \"Bengali\", \"BD\", \"BGD\"), new CountryData(\"Barbados\", \"Barbadian\", \"BB\", \"BRB\"), new CountryData(\"Belarus\", \"Belarusian\", \"BY\", \"BLR\"), new CountryData(\"Belgium\", \"Belgian\", \"BE\", \"BEL\"), new CountryData(\"Belize\", \"Belizean\", \"BZ\", \"BLZ\"), new CountryData(\"Benin\", \"Beninese\", \"BJ\", \"BEN\"), new CountryData(\"Bermuda\", \"Bermudian\", \"BM\", \"BMU\"), new CountryData(\"Bhutan\", \"Bhutanese\", \"BT\", \"BTN\"), new CountryData(\"Bolivia\", \"Bolivian\", \"BO\", \"BOL\"), new CountryData(\"Bonaire, Sint Eustatius and Saba\", \"Dutch\", \"BQ\", \"BES\"), new CountryData(\"Bosnia and Herzegovina\", \"Bosnian\", \"BA\", \"BIH\"), new CountryData(\"Botswana\", \"Batswana\", \"BW\", \"BWA\"), new CountryData(\"Brazil\", \"Brazilian\", \"BR\", \"BRA\"), new CountryData(\"British Virgin Islands\", \"Virgin Islander\", \"VG\", \"VGB\"), new CountryData(\"Brunei\", \"Bruneian\", \"BN\", \"BRN\"), new CountryData(\"Bulgaria\", \"Bulgarian\", \"BG\", \"BGR\"), new CountryData(\"Burkina Faso\", \"Burkinabé\", \"BF\", \"BFA\"), new CountryData(\"Burundi\", \"Burundian\", \"BI\", \"BDI\"), new CountryData(\"Cambodia\", \"Cambodian\", \"KH\", \"KHM\"), new CountryData(\"Cameroon\", \"Cameroonian\", \"CM\", \"CMR\"), new CountryData(\"Canada\", \"Canadian\", \"CA\", \"CAN\"), new CountryData(\"Cape Verde\", \"Cape Verdean\", \"CV\", \"CPV\"), new CountryData(\"Cayman Islands\", \"Caymanian\", \"KY\", \"CYM\"), new CountryData(\"Central African Republic\", \"Central African\", \"CF\", \"CAF\"), new CountryData(\"Chad\", \"Chadian\", \"TD\", \"TCD\"), new CountryData(\"Chile\", \"Chilean\", \"CL\", \"CHL\"), new CountryData(\"China\", \"Chinese\", \"CN\", \"CHN\"), new CountryData(\"Christmas Island\", \"Christmas Islander\", \"CX\", \"CXR\"), new CountryData(\"Cocos Islands\", \"Taiwanese\", \"CC\", \"CCK\"), new CountryData(\"Colombia\", \"Colombian\", \"CO\", \"COL\"), new CountryData(\"Comoros\", \"Comorian\", \"KM\", \"COM\"), new CountryData(\"Congo\", \"Congolese\", \"CG\", \"COG\"), new CountryData(\"Cook Islands\", \"Cook Islander\", \"CK\", \"COK\"), new CountryData(\"Costa Rica\", \"Costa Rican\", \"CR\", \"CRI\"), new CountryData(\"Côte d'Ivoire\", \"Ivorian\", \"CI\", \"CIV\"), new CountryData(\"Croatia\", \"Croatian\", \"HR\", \"HRV\"), new CountryData(\"Cuba\", \"Cuban\", \"CU\", \"CUB\"), new CountryData(\"Curaçao\", \"Dutch\", \"CW\", \"CUW\"), new CountryData(\"Cyprus\", \"Cypriot\", \"CY\", \"CYP\"), new CountryData(\"Czech Republic\", \"Czech\", \"CZ\", \"CZE\"), new CountryData(\"Democratic Republic of the Congo\", \"Congolese\", \"CD\", \"COD\"), new CountryData(\"Denmark\", \"Danish\", \"DK\", \"DNK\"), new CountryData(\"Djibouti\", \"Djiboutian\", \"DJ\", \"DJI\"), new CountryData(\"Dominica\", \"Dominican\", \"DM\", \"DMA\"), new CountryData(\"Dominican Republic\", \"Dominican\", \"DO\", \"DOM\"), new CountryData(\"Ecuador\", \"Ecuadorian\", \"EC\", \"ECU\"), new CountryData(\"Egypt\", \"Egyptian\", \"EG\", \"EGY\"), new CountryData(\"El Salvador\", \"Salvadoran\", \"SV\", \"SLV\"), new CountryData(\"Equatorial Guinea\", \"Equatoguinean\", \"GQ\", \"GNQ\"), new CountryData(\"Eritrea\", \"Eritrean\", \"ER\", \"ERI\"), new CountryData(\"Estonia\", \"Estonian\", \"EE\", \"EST\"), new CountryData(\"Ethiopia\", \"Ethiopian\", \"ET\", \"ETH\"), new CountryData(\"Falkland Islands\", \"Falkland Islander\", \"FK\", \"FLK\"), new CountryData(\"Faroe Islands\", \"Faroese\", \"FO\", \"FRO\"), new CountryData(\"Fiji\", \"Fijian\", \"FJ\", \"FJI\"), new CountryData(\"Finland\", \"Finnish\", \"FI\", \"FIN\"), new CountryData(\"France\", \"French\", \"FR\", \"FRA\"), new CountryData(\"French Guiana\", \"Guianan\", \"GF\", \"GUF\"), new CountryData(\"French Polynesia\", \"French Polynesian\", \"PF\", \"PYF\"), new CountryData(\"Gabon\", \"Gabonese\", \"GA\", \"GAB\"), new CountryData(\"Gambia\", \"Gambian\", \"GM\", \"GMB\"), new CountryData(\"Georgia\", \"Georgian\", \"GE\", \"GEO\"), new CountryData(\"Germany\", \"German\", \"DE\", \"DEU\"), new CountryData(\"Ghana\", \"Ghanaian\", \"GH\", \"GHA\"), new CountryData(\"Gibraltar\", \"Gibraltarian\", \"GI\", \"GIB\"), new CountryData(\"Greece\", \"Greek\", \"GR\", \"GRC\"), new CountryData(\"Greenland\", \"Greenlander\", \"GL\", \"GRL\"), new CountryData(\"Grenada\", \"Grenadian\", \"GD\", \"GRD\"), new CountryData(\"Guadeloupe\", \"Guadeloupean\", \"GP\", \"GLP\"), new CountryData(\"Guam\", \"Guamanian\", \"GU\", \"GUM\"), new CountryData(\"Guatemala\", \"Guatemalan\", \"GT\", \"GTM\"), new CountryData(\"Guernsey\", \"Guernseymen\", \"GG\", \"GGY\"), new CountryData(\"Guinea-Bissau\", \"Bissau-Guinean\", \"GW\", \"GNB\"), new CountryData(\"Guinea\", \"Guinean\", \"GN\", \"GIN\"), new CountryData(\"Guyana\", \"Guyanese\", \"GY\", \"GUY\"), new CountryData(\"Haiti\", \"Haitian\", \"HT\", \"HTI\"), new CountryData(\"Holy See\", \"Papal\", \"VA\", \"VAT\", [\"Vatican\"]), new CountryData(\"Honduras\", \"Honduran\", \"HN\", \"HND\"), new CountryData(\"Hong Kong\", \"Hong Kongese\", \"HK\", \"HKG\"), new CountryData(\"Hungary\", \"Hungarian\", \"HU\", \"HUN\"), new CountryData(\"Iceland\", \"Icelander\", \"IS\", \"ISL\"), new CountryData(\"India\", \"Indian\", \"IN\", \"IND\"), new CountryData(\"Indonesia\", \"Indonesian\", \"ID\", \"IDN\"), new CountryData(\"Iran\", \"Iranian\", \"IR\", \"IRN\"), new CountryData(\"Iraq\", \"Iraqi\", \"IQ\", \"IRQ\"), new CountryData(\"Ireland\", \"Irish\", \"IE\", \"IRL\"), new CountryData(\"Isle of Man\", \"Manx\", \"IM\", \"IMN\"), new CountryData(\"Israel\", \"Israeli\", \"IL\", \"ISR\"), new CountryData(\"Italy\", \"Italian\", \"IT\", \"ITA\"), new CountryData(\"Jamaica\", \"Jamaican\", \"JM\", \"JAM\"), new CountryData(\"Japan\", \"Japanese\", \"JP\", \"JPN\"), new CountryData(\"Jersey\", \"Jerseyman\", \"JE\", \"JEY\"), new CountryData(\"Jordan\", \"Jordanian\", \"JO\", \"JOR\"), new CountryData(\"Kazakhstan\", \"Kazakhstani\", \"KZ\", \"KAZ\"), new CountryData(\"Kenya\", \"Kenyan\", \"KE\", \"KEN\"), new CountryData(\"Kiribati\", \"I-Kiribati\", \"KI\", \"KIR\"), new CountryData(\"Kosovo\", \"Kosovar\", \"XK\", \"XXK\"), new CountryData(\"Kuwait\", \"\tKuwaiti\", \"KW\", \"KWT\"), new CountryData(\"Kyrgyzstan\", \"Kyrgyzstani\", \"KG\", \"KGZ\"), new CountryData(\"Laos\", \"Lao\", \"LA\", \"LAO\"), new CountryData(\"Latvia\", \"Latvian\", \"LV\", \"LVA\"), new CountryData(\"Lebanon\", \"Lebanese\", \"LB\", \"LBN\"), new CountryData(\"Lesotho\", \"Lesothonian\", \"LS\", \"LSO\"), new CountryData(\"Liberia\", \"Liberian\", \"LR\", \"LBR\"), new CountryData(\"Libya\", \"Libyan\", \"LY\", \"LBY\"), new CountryData(\"Liechtenstein\", \"Liechtensteiner\", \"LI\", \"LIE\"), new CountryData(\"Lithuania\", \"Lithuanian\", \"LT\", \"LTU\"), new CountryData(\"Luxembourg\", \"Luxembourgish\", \"LU\", \"LUX\"), new CountryData(\"Macao\", \"Macau\", \"MO\", \"MAC\"), new CountryData(\"Madagascar\", \"Malagasy\", \"MG\", \"MDG\"), new CountryData(\"Malawi\", \"Malawian\", \"MW\", \"MWI\"), new CountryData(\"Malaysia\", \"Malaysian\", \"MY\", \"MYS\"), new CountryData(\"Maldives\", \"Maldivian\", \"MV\", \"MDV\"), new CountryData(\"Mali\", \"Malian\", \"ML\", \"MLI\"), new CountryData(\"Malta\", \"Maltese\", \"MT\", \"MLT\"), new CountryData(\"Marshall Islands\", \"Marshallese\", \"MH\", \"MHL\"), new CountryData(\"Martinique\", \"Martinican\", \"MQ\", \"MTQ\"), new CountryData(\"Mauritania\", \"Mauritanian\", \"MR\", \"MRT\"), new CountryData(\"Mauritius\", \"Mauritian\", \"MU\", \"MUS\"), new CountryData(\"Mayotte\", \"Mahoran\", \"YT\", \"MYT\"), new CountryData(\"Mexico\", \"Mexican\", \"MX\", \"MEX\"), new CountryData(\"Micronesia\", \"Micronesian\", \"FM\", \"FSM\"), new CountryData(\"Moldova\", \"Moldovan\", \"MD\", \"MDA\"), new CountryData(\"Monaco\", \"Monegasque\", \"MC\", \"MCO\"), new CountryData(\"Mongolia\", \"Mongolian\", \"MN\", \"MNG\"), new CountryData(\"Montenegro\", \"Montenegrin\", \"ME\", \"MNE\"), new CountryData(\"Montserrat\", \"Montserratian\", \"MS\", \"MSR\"), new CountryData(\"Morocco\", \"Moroccan\", \"MA\", \"MAR\"), new CountryData(\"Mozambique\", \"Mozambican\", \"MZ\", \"MOZ\"), new CountryData(\"Myanmar\", \"Myanma\", \"MM\", \"MMR\"), new CountryData(\"Namibia\", \"Namibian\", \"NA\", \"NAM\"), new CountryData(\"Nauru\", \"Nauruan\", \"NR\", \"NRU\"), new CountryData(\"Nepal\", \"Nepalese\", \"NP\", \"NPL\"), new CountryData(\"Netherlands Antilles\", \"Netherlands Antillean\", \"AN\", \"ANT\"), new CountryData(\"Netherlands\", \"Dutch\", \"NL\", \"NLD\"), new CountryData(\"New Caledonia\", \"New Caledonian\", \"NC\", \"NCL\"), new CountryData(\"New Zealand\", \"New Zealander\", \"NZ\", \"NZL\"), new CountryData(\"Nicaragua\", \"Nicaraguan\", \"NI\", \"NIC\"), new CountryData(\"Niger\", \"Nigerien\", \"NE\", \"NER\"), new CountryData(\"Nigeria\", \"Nigerian\", \"NG\", \"NGA\"), new CountryData(\"Niue\", \"Niuean\", \"NU\", \"NIU\"), new CountryData(\"Norfolk Island\", \"Norfolk Islander\", \"NF\", \"NFK\"), new CountryData(\"North Korea\", \"North Korea\", \"KP\", \"PRK\"), new CountryData(\"North Macedonia\", \"Macedonian\", \"MK\", \"MKD\"), new CountryData(\"Northern Mariana Islands\", \"Northern Mariana Islander\", \"MP\", \"MNP\"), new CountryData(\"Norway\", \"Norwegian\", \"NO\", \"NOR\"), new CountryData(\"Oman\", \"Omani\", \"OM\", \"OMN\"), new CountryData(\"Pakistan\", \"Pakistani\", \"PK\", \"PAK\"), new CountryData(\"Palau\", \"Palauan\", \"PW\", \"PLW\"), new CountryData(\"Palestine\", \"Palestinian\", \"PS\", \"PSE\"), new CountryData(\"Panama\", \"Panamanian\", \"PA\", \"PAN\"), new CountryData(\"Papua New Guinea\", \"Papua New Guinean\", \"PG\", \"PNG\"), new CountryData(\"Paraguay\", \"Paraguayan\", \"PY\", \"PRY\"), new CountryData(\"Peru\", \"Peruvian\", \"PE\", \"PER\"), new CountryData(\"Philippines\", \"Filipino\", \"PH\", \"PHL\"), new CountryData(\"Pitcairn\", \"Pitcairn Islander\", \"PN\", \"PCN\"), new CountryData(\"Poland\", \"Polish\", \"PL\", \"POL\"), new CountryData(\"Portugal\", \"Portuguese\", \"PT\", \"PRT\"), new CountryData(\"Puerto Rico\", \"Puerto Rican\", \"PR\", \"PRI\"), new CountryData(\"Qatar\", \"Qatari\", \"QA\", \"QAT\"), new CountryData(\"Réunion\", \"Réunionese\", \"RE\", \"REU\"), new CountryData(\"Romania\", \"Romanian\", \"RO\", \"ROU\"), new CountryData(\"Russia\", \"Russian\", \"RU\", \"RUS\"), new CountryData(\"Rwanda\", \"Rwandan\", \"RW\", \"RWA\"), new CountryData(\"Saint Barthélemy\", \"Barthélemois\", \"BL\", \"BLM\"), new CountryData(\"Saint Helena, Ascension and Tristan da Cunha\", \"Ascensionian\", \"SH\", \"SHN\", [\"Saint Helenian\", \"Tristanian\"]), new CountryData(\"Saint Kitts and Nevis\", \"Kittitian\", \"KN\", \"KNA\", [\"Nevisian\"]), new CountryData(\"Saint Lucia\", \"Saint Lucian\", \"LC\", \"LCA\"), new CountryData(\"Saint Martin\", \"Saint-Martinois\", \"MF\", \"MAF\"), new CountryData(\"Saint Pierre and Miquelon\", \"Saint-Pierrais\", \"PM\", \"SPM\"), new CountryData(\"Saint Vincent and the Grenadines\", \"Saint Vincentian\", \"VC\", \"VCT\"), new CountryData(\"Samoa\", \"Samoan\", \"WS\", \"WSM\"), new CountryData(\"San Marino\", \"Sammarinese\", \"SM\", \"SMR\"), new CountryData(\"Sao Tome and Principe\", \"São Toméan\", \"ST\", \"STP\"), new CountryData(\"Saudi Arabia\", \"Saudi\", \"SA\", \"SAU\"), new CountryData(\"Senegal\", \"Senegalese\", \"SN\", \"SEN\"), new CountryData(\"Serbia\", \"Serbian\", \"RS\", \"SRB\"), new CountryData(\"Seychelles\", \"Seychellois\", \"SC\", \"SYC\"), new CountryData(\"Sierra Leone\", \"Sierra Leonean\", \"SL\", \"SLE\"), new CountryData(\"Singapore\", \"Singaporean\", \"SG\", \"SGP\", [\"SG\", \"Singapura\", \"Republik Singapura\"]), new CountryData(\"Sint Maarten\", \"St. Maartener\", \"SX\", \"SXM\"), new CountryData(\"Slovakia\", \"Slovak\", \"SK\", \"SVK\"), new CountryData(\"Slovenia\", \"Slovenian\", \"SI\", \"SVN\"), new CountryData(\"Solomon Islands\", \"Solomon Islander\", \"SB\", \"SLB\"), new CountryData(\"Somalia\", \"Somali\", \"SO\", \"SOM\"), new CountryData(\"South Africa\", \"South African\", \"ZA\", \"ZAF\"), new CountryData(\"South Georgia and the South Sandwich Islands\", \"South Georgian\", \"GS\", \"SGS\"), new CountryData(\"South Korea\", \"South Korean\", \"KR\", \"KOR\", [\"Republic of Korea\"]), new CountryData(\"South Sudan\", \"South Sudanese\", \"SS\", \"SSD\"), new CountryData(\"Spain\", \"Spanish\", \"ES\", \"ESP\"), new CountryData(\"Sri Lanka\", \"Sri Lankan\", \"LK\", \"LKA\"), new CountryData(\"Sudan\", \"Sudanese\", \"SD\", \"SDN\"), new CountryData(\"Suriname\", \"Surinamese\", \"SR\", \"SUR\"), new CountryData(\"Svalbard and Jan Mayen\", \"Svalbard\", \"SJ\", \"SJM\"), new CountryData(\"Swaziland\", \"Swazi\", \"SZ\", \"SWZ\"), new CountryData(\"Sweden\", \"Swedish\", \"SE\", \"SWE\"), new CountryData(\"Switzerland\", \"Swiss\", \"CH\", \"CHE\"), new CountryData(\"Syria\", \"Syrian\", \"SY\", \"SYR\"), new CountryData(\"Taiwan\", \"Taiwanese\", \"TW\", \"TWN\"), new CountryData(\"Tajikistan\", \"Tajik\", \"TJ\", \"TJK\"), new CountryData(\"Tanzania\", \"Tanzanian\", \"TZ\", \"TZA\"), new CountryData(\"Thailand\", \"Thai\", \"TH\", \"THA\"), new CountryData(\"Timor-Leste\", \"Timorese\", \"TL\", \"TLS\"), new CountryData(\"Togo\", \"Togolese\", \"TG\", \"TGO\"), new CountryData(\"Tokelau\", \"Tokelauan\", \"TK\", \"TKL\"), new CountryData(\"Tonga\", \"Tongan\", \"TO\", \"TON\"), new CountryData(\"Trinidad and Tobago\", \"Trinidadian and Tobagonian\", \"TT\", \"TTO\"), new CountryData(\"Tunisia\", \"Tunisian\", \"TN\", \"TUN\"), new CountryData(\"Turkey\", \"Turkish\", \"TR\", \"TUR\"), new CountryData(\"Turkmenistan\", \"Turkmenistani\", \"TM\", \"TKM\"), new CountryData(\"Turks and Caicos Islands\", \"Turks and Caicos Islander\", \"TC\", \"TCA\"), new CountryData(\"Tuvalu\", \"Tuvaluan\", \"TV\", \"TUV\"), new CountryData(\"Uganda\", \"Ugandan\", \"UG\", \"UGA\"), new CountryData(\"Ukraine\", \"Ukrainian\", \"UA\", \"UKR\"), new CountryData(\"United Arab Emirates\", \"Emirati\", \"AE\", \"ARE\", [\"AE\", \"UAE\"]), new CountryData(\"United Kingdom\", \"British\", \"GB\", \"GBR\", [\"UK\"]), new CountryData(\"United States Minor Outlying Islands\", \"American Islander\", \"UM\", \"UMI\"), new CountryData(\"United States\", \"American\", \"US\", \"USA\", [\"USA\"]), new CountryData(\"Uruguay\", \"Uruguayan\", \"UY\", \"URY\"), new CountryData(\"Uzbekistan\", \"Uzbek\", \"UZ\", \"UZB\"), new CountryData(\"Vanuatu\", \"Vanuatuan\", \"VU\", \"VUT\"), new CountryData(\"Venezuela\", \"Venezuelan\", \"VE\", \"VEN\"), new CountryData(\"Vietnam\", \"Vietnamese\", \"VN\", \"VNM\", [\"Viet Nam\", \"Republic of Viet Nam\", \"South Vietnam\"]), new CountryData(\"Virgin Islands of the United States\", \"Virgin Islander\", \"VI\", \"VIR\"), new CountryData(\"Wallis and Futuna\", \"Wallisian\", \"WF\", \"WLF\", [\"Futunan\"]), new CountryData(\"Western Sahara\", \"Western Saharan\", \"EH\", \"ESH\"), new CountryData(\"Yemen\", \"Yemeni\", \"YE\", \"YEM\"), new CountryData(\"Zambia\", \"Zambian\", \"ZM\", \"ZMB\"), new CountryData(\"Zimbabwe\", \"Zimbabwean\", \"ZW\", \"ZWE\")];","\"use strict\";\n\nfunction createUrl(svgUrl) {\n  return \"https://upload.wikimedia.org/wikipedia/\".concat(svgUrl);\n}\n\nmodule.exports = {\n  'ABW': createUrl('commons/f/f6/Flag_of_Aruba.svg'),\n  'AFG': createUrl('commons/5/5c/Flag_of_the_Taliban.svg'),\n  'AGO': createUrl('commons/9/9d/Flag_of_Angola.svg'),\n  'AIA': createUrl('commons/b/b4/Flag_of_Anguilla.svg'),\n  'ALA': createUrl('commons/5/52/Flag_of_%C3%85land.svg'),\n  'ALB': createUrl('commons/3/36/Flag_of_Albania.svg'),\n  'AND': createUrl('commons/1/19/Flag_of_Andorra.svg'),\n  'ANT': createUrl('commons/e/eb/Flag_of_the_Netherlands_Antilles_(1959%E2%80%931986).svg'),\n  'ARE': createUrl('commons/c/cb/Flag_of_the_United_Arab_Emirates.svg'),\n  'ARG': createUrl('commons/1/1a/Flag_of_Argentina.svg'),\n  'ARM': createUrl('commons/2/2f/Flag_of_Armenia.svg'),\n  'ASM': createUrl('commons/8/87/Flag_of_American_Samoa.svg'),\n  'ATG': createUrl('commons/8/89/Flag_of_Antigua_and_Barbuda.svg'),\n  'AUS': createUrl('commons/8/88/Flag_of_Australia_(converted).svg'),\n  'AUT': createUrl('commons/4/41/Flag_of_Austria.svg'),\n  'AZE': createUrl('commons/d/dd/Flag_of_Azerbaijan.svg'),\n  'BDI': createUrl('commons/5/50/Flag_of_Burundi.svg'),\n  'BEL': createUrl('commons/6/65/Flag_of_Belgium.svg'),\n  'BEN': createUrl('commons/0/0a/Flag_of_Benin.svg'),\n  'BES': createUrl('commons/2/20/Flag_of_the_Netherlands.svg'),\n  'BFA': createUrl('commons/3/31/Flag_of_Burkina_Faso.svg'),\n  'BGD': createUrl('commons/f/f9/Flag_of_Bangladesh.svg'),\n  'BGR': createUrl('commons/9/9a/Flag_of_Bulgaria.svg'),\n  'BHR': createUrl('commons/2/2c/Flag_of_Bahrain.svg'),\n  'BHS': createUrl('commons/9/93/Flag_of_the_Bahamas.svg'),\n  'BIH': createUrl('commons/b/bf/Flag_of_Bosnia_and_Herzegovina.svg'),\n  'BLM': createUrl('commons/0/03/Saint-Barthelémy_Icône.svg'),\n  'BLR': createUrl('commons/8/85/Flag_of_Belarus.svg'),\n  'BLZ': createUrl('commons/e/e7/Flag_of_Belize.svg'),\n  'BMU': createUrl('commons/b/bf/Flag_of_Bermuda.svg'),\n  'BOL': createUrl('commons/5/5b/Bolivia_Flag.svg'),\n  'BRA': createUrl('commons/0/05/Flag_of_Brazil.svg'),\n  'BRB': createUrl('commons/e/ef/Flag_of_Barbados.svg'),\n  'BRN': createUrl('commons/9/9c/Flag_of_Brunei.svg'),\n  'BTN': createUrl('commons/9/91/Flag_of_Bhutan.svg'),\n  'BWA': createUrl('commons/f/fa/Flag_of_Botswana.svg'),\n  'CAF': createUrl('commons/6/6f/Flag_of_the_Central_African_Republic.svg'),\n  'CAN': createUrl('commons/d/d9/Flag_of_Canada_(Pantone).svg'),\n  'CCK': createUrl('commons/7/74/Flag_of_the_Cocos_(Keeling)_Islands.svg'),\n  'CHE': createUrl('commons/f/f3/Flag_of_Switzerland.svg'),\n  'CHL': createUrl('commons/7/78/Flag_of_Chile.svg'),\n  'CHN': createUrl('commons/f/fa/Flag_of_the_People%27s_Republic_of_China.svg'),\n  'CIV': createUrl('commons/f/fe/Flag_of_Côte_d%27Ivoire.svg'),\n  'CMR': createUrl('commons/4/4f/Flag_of_Cameroon.svg'),\n  'COD': createUrl('commons/1/11/Flag_of_the_Democratic_Republic_of_the_Congo_(3-2).svg'),\n  'COG': createUrl('commons/9/92/Flag_of_the_Republic_of_the_Congo.svg'),\n  'COK': createUrl('commons/3/35/Flag_of_the_Cook_Islands.svg'),\n  'COL': createUrl('commons/2/21/Flag_of_Colombia.svg'),\n  'COM': createUrl('commons/d/df/Flag_of_the_Comoros_(3-2).svg'),\n  'CPV': createUrl('commons/3/38/Flag_of_Cape_Verde.svg'),\n  'CRI': createUrl('commons/b/bc/Flag_of_Costa_Rica_(state).svg'),\n  'CUB': createUrl('commons/b/bd/Flag_of_Cuba.svg'),\n  'CUW': createUrl('commons/b/b1/Flag_of_Curaçao.svg'),\n  'CXR': createUrl('commons/6/67/Flag_of_Christmas_Island.svg'),\n  'CYM': createUrl('commons/0/0f/Flag_of_the_Cayman_Islands.svg'),\n  'CYP': createUrl('commons/d/d4/Flag_of_Cyprus.svg'),\n  'CZE': createUrl('commons/c/cb/Flag_of_the_Czech_Republic.svg'),\n  'DEU': createUrl('commons/b/ba/Flag_of_Germany.svg'),\n  'DJI': createUrl('commons/3/34/Flag_of_Djibouti.svg'),\n  'DMA': createUrl('commons/c/c4/Flag_of_Dominica.svg'),\n  'DNK': createUrl('commons/9/9c/Flag_of_Denmark.svg'),\n  'DOM': createUrl('commons/9/9f/Flag_of_the_Dominican_Republic.svg'),\n  'DZA': createUrl('commons/7/77/Flag_of_Algeria.svg'),\n  'ECU': createUrl('commons/e/e8/Flag_of_Ecuador.svg'),\n  'EGY': createUrl('commons/f/fe/Flag_of_Egypt.svg'),\n  'ERI': createUrl('commons/2/29/Flag_of_Eritrea.svg'),\n  'ESH': createUrl('commons/2/26/Flag_of_the_Sahrawi_Arab_Democratic_Republic.svg'),\n  'ESP': createUrl('commons/9/9a/Flag_of_Spain.svg'),\n  'EST': createUrl('commons/8/8f/Flag_of_Estonia.svg'),\n  'ETH': createUrl('commons/7/71/Flag_of_Ethiopia.svg'),\n  'FIN': createUrl('commons/b/bc/Flag_of_Finland.svg'),\n  'FJI': createUrl('commons/b/ba/Flag_of_Fiji.svg'),\n  'FLK': createUrl('commons/8/83/Flag_of_the_Falkland_Islands.svg'),\n  'FRA': createUrl('commons/c/c3/Flag_of_France.svg'),\n  'FRO': createUrl('commons/3/3c/Flag_of_the_Faroe_Islands.svg'),\n  'FSM': createUrl('commons/e/e4/Flag_of_the_Federated_States_of_Micronesia.svg'),\n  'GAB': createUrl('commons/0/04/Flag_of_Gabon.svg'),\n  'GBR': createUrl('commons/a/a5/Flag_of_the_United_Kingdom_(1-2).svg'),\n  'GEO': createUrl('commons/0/0f/Flag_of_Georgia.svg'),\n  'GGY': createUrl('commons/f/fa/Flag_of_Guernsey.svg'),\n  'GHA': createUrl('commons/1/19/Flag_of_Ghana.svg'),\n  'GIB': createUrl('commons/0/02/Flag_of_Gibraltar.svg'),\n  'GIN': createUrl('commons/e/ed/Flag_of_Guinea.svg'),\n  'GLP': createUrl('commons/9/9f/Flag_of_France_%287x10%29.svg'),\n  'GMB': createUrl('commons/7/77/Flag_of_The_Gambia.svg'),\n  'GNB': createUrl('commons/0/01/Flag_of_Guinea-Bissau.svg'),\n  'GNQ': createUrl('commons/3/31/Flag_of_Equatorial_Guinea.svg'),\n  'GRC': createUrl('commons/5/5c/Flag_of_Greece.svg'),\n  'GRD': createUrl('commons/b/bc/Flag_of_Grenada.svg'),\n  'GRL': createUrl('commons/0/09/Flag_of_Greenland.svg'),\n  'GTM': createUrl('commons/e/ec/Flag_of_Guatemala.svg'),\n  'GUF': createUrl('commons/e/ed/Flag_of_France_%28Pantone%29.svg'),\n  'GUM': createUrl('commons/0/07/Flag_of_Guam.svg'),\n  'GUY': createUrl('commons/9/99/Flag_of_Guyana.svg'),\n  'HKG': createUrl('commons/5/5b/Flag_of_Hong_Kong.svg'),\n  'HND': createUrl('commons/8/82/Flag_of_Honduras.svg'),\n  'HRV': createUrl('commons/1/1b/Flag_of_Croatia.svg'),\n  'HTI': createUrl('commons/5/56/Flag_of_Haiti.svg'),\n  'HUN': createUrl('commons/c/c1/Flag_of_Hungary.svg'),\n  'IDN': createUrl('commons/9/9f/Flag_of_Indonesia.svg'),\n  'IMN': createUrl('commons/b/bc/Flag_of_the_Isle_of_Man.svg'),\n  'IND': createUrl('commons/4/41/Flag_of_India.svg'),\n  'IRL': createUrl('commons/c/c0/Republic_of_Ireland_Flag.svg'),\n  'IRN': createUrl('commons/c/ca/Flag_of_Iran.svg'),\n  'IRQ': createUrl('commons/f/f6/Flag_of_Iraq.svg'),\n  'ISL': createUrl('commons/c/ce/Flag_of_Iceland.svg'),\n  'ISR': createUrl('commons/d/d4/Flag_of_Israel.svg'),\n  'ITA': createUrl('commons/0/03/Flag_of_Italy.svg'),\n  'JAM': createUrl('commons/0/0a/Flag_of_Jamaica.svg'),\n  'JEY': createUrl('commons/1/1c/Flag_of_Jersey.svg'),\n  'JOR': createUrl('commons/c/c0/Flag_of_Jordan.svg'),\n  'JPN': createUrl('commons/b/bc/Flag_of_Japan%28bordered%29.svg'),\n  'KAZ': createUrl('commons/d/d3/Flag_of_Kazakhstan.svg'),\n  'KEN': createUrl('commons/4/49/Flag_of_Kenya.svg'),\n  'KGZ': createUrl('commons/c/c7/Flag_of_Kyrgyzstan.svg'),\n  'KHM': createUrl('commons/8/83/Flag_of_Cambodia.svg'),\n  'KIR': createUrl('commons/d/d3/Flag_of_Kiribati.svg'),\n  'KNA': createUrl('commons/f/fe/Flag_of_Saint_Kitts_and_Nevis.svg'),\n  'KOR': createUrl('commons/0/09/Flag_of_South_Korea.svg'),\n  'KWT': createUrl('commons/a/aa/Flag_of_Kuwait.svg'),\n  'LAO': createUrl('commons/5/56/Flag_of_Laos.svg'),\n  'LBN': createUrl('commons/5/59/Flag_of_Lebanon.svg'),\n  'LBR': createUrl('commons/b/b8/Flag_of_Liberia.svg'),\n  'LBY': createUrl('commons/0/05/Flag_of_Libya.svg'),\n  'LCA': createUrl('commons/9/9f/Flag_of_Saint_Lucia.svg'),\n  'LIE': createUrl('commons/4/47/Flag_of_Liechtenstein.svg'),\n  'LKA': createUrl('commons/1/11/Flag_of_Sri_Lanka.svg'),\n  'LSO': createUrl('commons/4/4a/Flag_of_Lesotho.svg'),\n  'LTU': createUrl('commons/1/11/Flag_of_Lithuania.svg'),\n  'LUX': createUrl('commons/d/da/Flag_of_Luxembourg.svg'),\n  'LVA': createUrl('commons/8/84/Flag_of_Latvia.svg'),\n  'MAC': createUrl('commons/6/63/Flag_of_Macau.svg'),\n  'MAF': createUrl('commons/d/dd/Flag_of_Saint-Martin_%28fictional%29.svg'),\n  'MAR': createUrl('commons/2/2c/Flag_of_Morocco.svg'),\n  'MCO': createUrl('commons/e/ea/Flag_of_Monaco.svg'),\n  'MDA': createUrl('commons/2/27/Flag_of_Moldova.svg'),\n  'MDG': createUrl('commons/b/bc/Flag_of_Madagascar.svg'),\n  'MDV': createUrl('commons/0/0f/Flag_of_Maldives.svg'),\n  'MEX': createUrl('commons/f/fc/Flag_of_Mexico.svg'),\n  'MHL': createUrl('commons/2/2e/Flag_of_the_Marshall_Islands.svg'),\n  'MKD': createUrl('commons/7/79/Flag_of_North_Macedonia.svg'),\n  'MLI': createUrl('commons/9/92/Flag_of_Mali.svg'),\n  'MLT': createUrl('commons/7/73/Flag_of_Malta.svg'),\n  'MMR': createUrl('commons/8/8c/Flag_of_Myanmar.svg'),\n  'MNE': createUrl('commons/6/64/Flag_of_Montenegro.svg'),\n  'MNG': createUrl('commons/4/4c/Flag_of_Mongolia.svg'),\n  'MNP': createUrl('commons/e/e0/Flag_of_the_Northern_Mariana_Islands.svg'),\n  'MOZ': createUrl('commons/d/d0/Flag_of_Mozambique.svg'),\n  'MRT': createUrl('commons/4/43/Flag_of_Mauritania.svg'),\n  'MSR': createUrl('commons/d/d0/Flag_of_Montserrat.svg'),\n  'MTQ': createUrl('commons/2/21/Flag_of_the_Territorial_Collectivity_of_Martinique.svg'),\n  'MUS': createUrl('commons/7/77/Flag_of_Mauritius.svg'),\n  'MWI': createUrl('commons/d/d1/Flag_of_Malawi.svg'),\n  'MYS': createUrl('commons/6/66/Flag_of_Malaysia.svg'),\n  'MYT': createUrl('commons/c/c3/Flag_of_France.svg'),\n  'NAM': createUrl('commons/0/00/Flag_of_Namibia.svg'),\n  'NCL': createUrl('commons/6/66/Flag_of_FLNKS.svg'),\n  'NER': createUrl('commons/f/f4/Flag_of_Niger.svg'),\n  'NFK': createUrl('commons/4/48/Flag_of_Norfolk_Island.svg'),\n  'NGA': createUrl('commons/7/79/Flag_of_Nigeria.svg'),\n  'NIC': createUrl('commons/1/19/Flag_of_Nicaragua.svg'),\n  'NIU': createUrl('commons/0/01/Flag_of_Niue.svg'),\n  'NLD': createUrl('commons/2/20/Flag_of_the_Netherlands.svg'),\n  'NOR': createUrl('commons/d/d9/Flag_of_Norway.svg'),\n  'NPL': createUrl('commons/9/9b/Flag_of_Nepal.svg'),\n  'NRU': createUrl('commons/3/30/Flag_of_Nauru.svg'),\n  'NZL': createUrl('commons/3/3e/Flag_of_New_Zealand.svg'),\n  'OMN': createUrl('commons/d/dd/Flag_of_Oman.svg'),\n  'PAK': createUrl('commons/3/32/Flag_of_Pakistan.svg'),\n  'PAN': createUrl('commons/a/ab/Flag_of_Panama.svg'),\n  'PCN': createUrl('commons/8/88/Flag_of_the_Pitcairn_Islands.svg'),\n  'PER': createUrl('commons/c/cf/Flag_of_Peru.svg'),\n  'PHL': createUrl('commons/9/99/Flag_of_the_Philippines.svg'),\n  'PLW': createUrl('commons/4/48/Flag_of_Palau.svg'),\n  'PNG': createUrl('commons/e/e3/Flag_of_Papua_New_Guinea.svg'),\n  'POL': createUrl('commons/1/12/Flag_of_Poland.svg'),\n  'PRI': createUrl('commons/2/28/Flag_of_Puerto_Rico.svg'),\n  'PRK': createUrl('commons/5/51/Flag_of_North_Korea.svg'),\n  'PRT': createUrl('commons/5/5c/Flag_of_Portugal.svg'),\n  'PRY': createUrl('commons/2/27/Flag_of_Paraguay.svg'),\n  'PSE': createUrl('commons/f/f4/Palestine_Flag.svg'),\n  'PYF': createUrl('commons/d/db/Flag_of_French_Polynesia.svg'),\n  'QAT': createUrl('commons/6/65/Flag_of_Qatar.svg'),\n  'REU': createUrl('commons/5/5a/Flag_of_Réunion.svg'),\n  'ROU': createUrl('commons/7/73/Flag_of_Romania.svg'),\n  'RUS': createUrl('commons/f/f3/Flag_of_Russia.svg'),\n  'RWA': createUrl('commons/1/17/Flag_of_Rwanda.svg'),\n  'SAU': createUrl('commons/0/0d/Flag_of_Saudi_Arabia.svg'),\n  'SDN': createUrl('commons/0/01/Flag_of_Sudan.svg'),\n  'SEN': createUrl('commons/f/fd/Flag_of_Senegal.svg'),\n  'SGP': createUrl('commons/4/48/Flag_of_Singapore.svg'),\n  'SGS': createUrl('commons/e/ed/Flag_of_South_Georgia_and_the_South_Sandwich_Islands.svg'),\n  'SHN': createUrl('commons/0/00/Flag_of_Saint_Helena.svg'),\n  'SJM': createUrl('commons/d/d9/Flag_of_Norway.svg'),\n  'SLB': createUrl('commons/7/74/Flag_of_the_Solomon_Islands.svg'),\n  'SLE': createUrl('commons/1/17/Flag_of_Sierra_Leone.svg'),\n  'SLV': createUrl('commons/3/34/Flag_of_El_Salvador.svg'),\n  'SMR': createUrl('commons/b/b1/Flag_of_San_Marino.svg'),\n  'SOM': createUrl('commons/a/a0/Flag_of_Somalia.svg'),\n  'SPM': createUrl('commons/7/74/Flag_of_Saint-Pierre_and_Miquelon.svg'),\n  'SRB': createUrl('commons/f/ff/Flag_of_Serbia.svg'),\n  'SSD': createUrl('commons/7/7a/Flag_of_South_Sudan.svg'),\n  'STP': createUrl('commons/4/4f/Flag_of_Sao_Tome_and_Principe.svg'),\n  'SUR': createUrl('commons/6/60/Flag_of_Suriname.svg'),\n  'SVK': createUrl('commons/e/e6/Flag_of_Slovakia.svg'),\n  'SVN': createUrl('commons/f/f0/Flag_of_Slovenia.svg'),\n  'SWE': createUrl('commons/4/4c/Flag_of_Sweden.svg'),\n  'SWZ': createUrl('commons/f/fb/Flag_of_Eswatini.svg'),\n  'SXM': createUrl('commons/d/d3/Flag_of_Sint_Maarten.svg'),\n  'SYC': createUrl('commons/f/fc/Flag_of_Seychelles.svg'),\n  'SYR': createUrl('commons/5/53/Flag_of_Syria.svg'),\n  'TCA': createUrl('commons/a/a0/Flag_of_the_Turks_and_Caicos_Islands.svg'),\n  'TCD': createUrl('commons/4/4b/Flag_of_Chad.svg'),\n  'TGO': createUrl('commons/6/68/Flag_of_Togo.svg'),\n  'THA': createUrl('commons/a/a9/Flag_of_Thailand.svg'),\n  'TJK': createUrl('commons/d/d0/Flag_of_Tajikistan.svg'),\n  'TKL': createUrl('commons/8/8e/Flag_of_Tokelau.svg'),\n  'TKM': createUrl('commons/1/1b/Flag_of_Turkmenistan.svg'),\n  'TLS': createUrl('commons/2/26/Flag_of_East_Timor.svg'),\n  'TON': createUrl('commons/9/9a/Flag_of_Tonga.svg'),\n  'TTO': createUrl('commons/6/64/Flag_of_Trinidad_and_Tobago.svg'),\n  'TUN': createUrl('commons/c/ce/Flag_of_Tunisia.svg'),\n  'TUR': createUrl('commons/b/b4/Flag_of_Turkey.svg'),\n  'TUV': createUrl('commons/3/38/Flag_of_Tuvalu.svg'),\n  'TWN': createUrl('commons/7/72/Flag_of_the_Republic_of_China.svg'),\n  'TZA': createUrl('commons/3/38/Flag_of_Tanzania.svg'),\n  'UGA': createUrl('commons/4/4e/Flag_of_Uganda.svg'),\n  'UKR': createUrl('commons/4/49/Flag_of_Ukraine.svg'),\n  'UMI': createUrl('commons/0/05/Flag_of_the_U.S..svg'),\n  'URY': createUrl('commons/f/fe/Flag_of_Uruguay.svg'),\n  'USA': createUrl('commons/a/a4/Flag_of_the_United_States.svg'),\n  'UZB': createUrl('commons/8/84/Flag_of_Uzbekistan.svg'),\n  'VAT': createUrl('commons/0/00/Flag_of_the_Vatican_City.svg'),\n  'VCT': createUrl('commons/6/6d/Flag_of_Saint_Vincent_and_the_Grenadines.svg'),\n  'VEN': createUrl('commons/7/7b/Flag_of_Venezuela_(state).svg'),\n  'VGB': createUrl('commons/4/42/Flag_of_the_British_Virgin_Islands.svg'),\n  'VIR': createUrl('commons/f/f8/Flag_of_the_United_States_Virgin_Islands.svg'),\n  'VNM': createUrl('commons/2/21/Flag_of_Vietnam.svg'),\n  'VUT': createUrl('commons/6/6e/Flag_of_Vanuatu_(official).svg'),\n  'WLF': createUrl('commons/d/d2/Flag_of_Wallis_and_Futuna.svg'),\n  'WSM': createUrl('commons/3/31/Flag_of_Samoa.svg'),\n  'XXK': createUrl('commons/1/1f/Flag_of_Kosovo.svg'),\n  'YEM': createUrl('commons/8/89/Flag_of_Yemen.svg'),\n  'ZAF': createUrl('commons/a/af/Flag_of_South_Africa.svg'),\n  'ZMB': createUrl('commons/0/06/Flag_of_Zambia.svg'),\n  'ZWE': createUrl('commons/6/6a/Flag_of_Zimbabwe.svg')\n};","\"use strict\";\n\nvar countries = require(\"./data/countries\");\n\nvar flagUrls = require(\"./data/flagUrlByIso3\");\n\nvar _require = require(\"./lib/api\"),\n    findFlagUrlByCountryName = _require.findFlagUrlByCountryName,\n    findFlagUrlByNationality = _require.findFlagUrlByNationality,\n    findFlagUrlByIso2Code = _require.findFlagUrlByIso2Code,\n    findFlagUrlByIso3Code = _require.findFlagUrlByIso3Code;\n\nmodule.exports = {\n  countries: countries,\n  flagUrls: flagUrls,\n  findFlagUrlByCountryName: findFlagUrlByCountryName,\n  findFlagUrlByNationality: findFlagUrlByNationality,\n  findFlagUrlByIso2Code: findFlagUrlByIso2Code,\n  findFlagUrlByIso3Code: findFlagUrlByIso3Code\n};","\"use strict\";\n\nvar countries = require(\"../data/countries\");\n\nfunction isEqual(str1, str2) {\n  return str1.toUpperCase() === str2.toUpperCase();\n}\n\nfunction findFlagUrlByPredicate(countries, predicate) {\n  var country = countries.find(predicate);\n  return country ? country.flag : \"\";\n}\n\nmodule.exports = {\n  findFlagUrlByCountryName: function findFlagUrlByCountryName(countryName) {\n    return findFlagUrlByPredicate(countries, function (_ref) {\n      var name = _ref.name,\n          altSpellings = _ref.altSpellings;\n      return isEqual(name, countryName) || altSpellings.some(function (altSpelling) {\n        return isEqual(altSpelling, countryName);\n      });\n    });\n  },\n  findFlagUrlByNationality: function findFlagUrlByNationality(nationality) {\n    return findFlagUrlByPredicate(countries, function (_ref2) {\n      var demonym = _ref2.demonym;\n      return isEqual(demonym, nationality);\n    });\n  },\n  findFlagUrlByIso2Code: function findFlagUrlByIso2Code(iso2Code) {\n    return findFlagUrlByPredicate(countries, function (_ref3) {\n      var iso2 = _ref3.iso2;\n      return isEqual(iso2, iso2Code);\n    });\n  },\n  findFlagUrlByIso3Code: function findFlagUrlByIso3Code(iso3Code) {\n    return findFlagUrlByPredicate(countries, function (_ref4) {\n      var iso3 = _ref4.iso3;\n      return isEqual(iso3, iso3Code);\n    });\n  }\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import national_foods from '../data/country_food_data.json';\n// import country_foods from '../data/foods.js';\n// const national_foods = require('../data/country_food_data.json');\nconst country_foods = require('../data/foods.js');\nimport { countries } from \"country-flags-svg\"; \n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const modal = document.querySelectorAll(\".modal\");\n    const overlay = document.querySelectorAll(\".overlay\");\n    const openModalBtn = document.querySelectorAll(\".button\");\n    const closeModalBtn = document.querySelectorAll(\".btn-close\");\n\n    const openModal = function () {\n        modal.classList.remove(\"hidden\");\n        overlay.classList.remove(\"hidden\");\n    };\n\n    const closeModal = function () {\n        modal.classList.add(\"hidden\");\n        overlay.classList.add(\"hidden\");\n    };\n\n    openModalBtn.addEventListener(\"click\", openModal); \n    closeModalBtn.addEventListener(\"click\", closeModal);\n    overlay.addEventListener(\"click\", closeModal);\n    const width = 900;\n    const height = 900;\n\n\n    \n    const svg = d3.select('body')\n        .append('svg')\n        .attr('width', width)\n        .attr('height', height);\n\n\n    const projection = d3.geoMercator().scale(140).translate([width / 2, height / 1.4]);\n    //set up the path generator \n    const path = d3.geoPath().projection(projection);\n\n    const tooltip = svg.append('g');\n\n    const loadJSONData = async (url) => {\n        try{\n            const response = await fetch(url); \n            if(!response.ok){\n                throw new Error(\"Failed to fetch data\")\n            }\n            const data = await response.json();\n            return data;\n        } catch (error){\n            console.error(error); \n        }\n    }; \n\n    const loadData = async () => {\n        const countryData = await loadJSONData('../data/country_food_data.json');\n        const foodData = await loadJSONData('../data/foods.js');\n        // return {countryData, foodData}; \n    }\n\n\n    d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json').then(data => {\n        const countries = topojson.feature(data, data.objects.countries);\n       \n        svg.selectAll('path')\n            .data(countries.features)\n            .enter()\n            .append('path')\n            .attr('class', 'country')\n            .attr('d', path)\n            .attr('data-countryname', (d) => d.properties.name)\n            .append('title')\n            .text(d => ` ${d.properties.name}`);\n\n\n\n            svg.on('mouseover', (d) => {\n                console.log('MOUSEOVER EVENT', d.target?.dataset)\n                let hovered_country = getCountryNameFromTarget(d.target?.dataset)\n\n                if (national_foods[selected_country]) {\n                    document.getElementsByClassName(\"country\").innerHTML = selected_country \n                }\n\n\n            })\n\n            // add x to country/food box\n\n            svg.on(\"click\", (d) => {\n                let selected_country = getCountryNameFromTarget(d.target)\n                // let country_reveal = document.querySelectorAll('country-reveal'); \n                if (national_foods[selected_country]) {\n                    document.getElementById(\"food_displayer\").innerHTML = selected_country + \": \" + national_foods[selected_country].dish\n                    // document.getElementById(\"country_info_displayr\").innerHTML = selected_country + \": \" + national_foods[selected_country].dish\n\n                }\n            })\n\n       \n           \n    });\n\n    \n   \n\n\n    function getCountryNameFromTarget(target) {\n        \n        if (!target) {\n            return \"\"\n        }\n        \n        let element = target.querySelectorAll(\"title\")\n        \n\n        if (!element) {\n            return \"\"\n        }\n\n        let country_id_and_name = element.innerHTML\n        let split_index = country_id_and_name.indexOf(': ') + 2\n\n        let country_name = country_id_and_name.slice(split_index)\n\n        return country_name\n    }\n\n\n    //onchange food-displayer\n      let countryjs = Object.keys(country_foods);\n    //   console.log(countryjs)\n    //   console.log(countries[0][\"dish\"]) how do i pull dish in \n    countryjs.forEach(function(selectedItem){\n        // console.log(\"hi\" + selectedItem)console.log(\"hi\" + selectedItem)\n      \n        let option = document.createElement('option'); \n\n        option.value = selectedItem //country food code to pull country food\n        option.innerHTML= selectedItem //code to pull country name\n        selector.appendChild(option)\n\n        \n    }), \n\n    selector.onchange = function(){\n\n      \n        // console.log(this.value)\n\n        let selected_country = this.value; \n\n        // console.log(selected_country + \" is the selected country\")\n        // console.log(country_foods[selected_country].dish)\n\n        document.getElementById(\"food_displayer\").innerHTML = selected_country + \": \" + country_foods[selected_country].dish\n    }\n\n\n\n\n})"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","flagUrlByIso3","CountryData","name","demonym","iso2","iso3","altSpellings","arguments","undefined","instance","TypeError","_classCallCheck","this","flag","module","exports","createUrl","svgUrl","concat","countries","flagUrls","_require","findFlagUrlByCountryName","findFlagUrlByNationality","findFlagUrlByIso2Code","findFlagUrlByIso3Code","isEqual","str1","str2","toUpperCase","findFlagUrlByPredicate","predicate","country","find","countryName","_ref","some","altSpelling","nationality","_ref2","iso2Code","_ref3","iso3Code","_ref4","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","r","Symbol","toStringTag","value","country_foods","require","document","addEventListener","modal","querySelectorAll","overlay","openModalBtn","closeModalBtn","closeModal","classList","add","remove","svg","d3","select","append","attr","projection","geoMercator","scale","translate","width","path","geoPath","getCountryNameFromTarget","element","country_id_and_name","innerHTML","split_index","indexOf","slice","json","then","data","topojson","feature","objects","selectAll","features","enter","d","properties","text","on","console","log","dataset","national_foods","selected_country","getElementsByClassName","getElementById","dish","keys","forEach","selectedItem","option","createElement","selector","appendChild","onchange"],"sourceRoot":""}